---
import Layout from "../layouts/Layout.astro";
import Navigation from '../components/Navigation.astro';
import "@fontsource/press-start-2p";
import "@fontsource/vt323";
import { loadModels } from '../utils/loadModels';
import type { Model } from '../types/models';

const models = loadModels();
---

<Layout title="Model Hub - Cortex">
  <div class="container">
    <Navigation activeTab="model-hub" />
    
    <main>
      <h1 class="page-title">Cortex Model Hub</h1>
      
      <div class="model-tabs">
        <button class="tab-button active" data-tab="cortex-hub">Cortex Hub</button>
        <button class="tab-button" data-tab="hf-hub">HF Hub</button>
      </div>
      
      <div id="cortex-hub-table" class="model-table-container active">
        <table class="model-table">
          <thead>
            <tr>
              <th>Model Name</th>
              <th>Last Updated</th>
              <th>Command</th>
            </tr>
          </thead>
          <tbody>
            {models.cortex_hub.map((model: Model) => (
              <tr>
                <td>{model.name}</td>
                <td>{model.updated}</td>
                <td>
                  <div class="command-container">
                    <code>{model.command}</code>
                    <button class="copy-btn" data-command={model.command}>
                      <span class="copy-icon">ðŸ“‹</span>
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      
      <div id="hf-hub-table" class="model-table-container">
        <table class="model-table">
          <thead>
            <tr>
              <th>Model Name</th>
              <th>Last Updated</th>
              <th>Command</th>
            </tr>
          </thead>
          <tbody>
            {models.huggingface_hub.map((model) => (
              <tr>
                <td>{model.name}</td>
                <td>{model.updated}</td>
                <td>
                  <div class="command-container">
                    <code>{model.command}</code>
                    <button class="copy-btn" data-command={model.command}>
                      <span class="copy-icon">ðŸ“‹</span>
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </main>
  </div>
</Layout>

<style>
  .container {
    background: #202020;
    min-height: 100vh;
    color: #98cbf9;
    font-family: "VT323", monospace;
    padding: 2rem;
    position: relative;
  }
  
  main {
    padding-top: 80px;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .page-title {
    font-family: "Press Start 2P", cursive;
    font-size: 2.5rem;
    text-align: center;
    color: #98cbf9;
    margin-bottom: 3rem;
    text-shadow: 0 0 10px rgba(152, 203, 249, 0.5);
    animation: glow 2s ease-in-out infinite alternate;
  }
  
  @keyframes glow {
    from {
      text-shadow: 0 0 5px rgba(152, 203, 249, 0.5);
    }
    to {
      text-shadow: 0 0 20px rgba(152, 203, 249, 0.8);
    }
  }
  
  .model-tabs {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }
  
  .tab-button {
    background: #000;
    border: 2px solid #98cbf9;
    border-radius: 10px;
    padding: 0.75rem 1.5rem;
    color: #98cbf9;
    font-family: "Press Start 2P", cursive;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .tab-button:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(152, 203, 249, 0.3);
  }
  
  .tab-button.active {
    background: #98cbf9;
    color: #000;
    border-color: #fff;
    box-shadow: 0 0 15px rgba(152, 203, 249, 0.5);
  }
  
  .model-table-container {
    background: #000;
    border: 2px solid #98cbf9;
    border-radius: 10px;
    padding: 1rem;
    margin-top: 2rem;
    box-shadow: 0 0 20px rgba(152, 203, 249, 0.2);
    overflow-x: auto;
    display: none;
  }
  
  .model-table-container.active {
    display: block;
    animation: fadeIn 0.5s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  .model-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
  }
  
  .model-table th,
  .model-table td {
    padding: 1rem;
    text-align: left;
    border-bottom: 1px solid rgba(152, 203, 249, 0.3);
  }
  
  .model-table th {
    font-family: "Press Start 2P", cursive;
    font-size: 0.9rem;
    color: #fff;
    text-transform: uppercase;
  }
  
  .model-table tr {
    transition: all 0.2s ease;
  }
  
  .model-table tr:hover {
    background: rgba(152, 203, 249, 0.1);
  }
  
  .model-table tr:last-child td {
    border-bottom: none;
  }
  
  .command-container {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  code {
    background: rgba(152, 203, 249, 0.1);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-family: monospace;
  }
  
  .copy-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: #98cbf9;
    font-size: 1.2rem;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.25rem;
  }
  
  .copy-btn:hover {
    transform: scale(1.2);
    color: #fff;
    text-shadow: 0 0 10px rgba(152, 203, 249, 0.8);
  }
  
  .copy-btn.copied {
    color: #4CAF50;
  }
  
  @media (max-width: 768px) {
    .page-title {
      font-size: 2rem;
    }
    
    .model-tabs {
      flex-wrap: wrap;
    }
    
    .tab-button {
      font-size: 0.7rem;
      padding: 0.5rem 1rem;
    }
    
    .model-table th, 
    .model-table td {
      padding: 0.75rem 0.5rem;
      font-size: 0.9rem;
    }
    
    .model-table th {
      font-size: 0.7rem;
    }
  }
  
  @media (max-width: 580px) {
    .page-title {
      font-size: 1.5rem;
    }
    
    .model-table th {
      font-size: 0.6rem;
    }
    
    .tab-button {
      font-size: 0.6rem;
      padding: 0.4rem 0.8rem;
    }
  }
</style>

<script>
  // Add interactivity to the tabs
  document.addEventListener('DOMContentLoaded', () => {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tables = document.querySelectorAll('.model-table-container');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons
        tabButtons.forEach(btn => btn.classList.remove('active'));
        
        // Add active class to clicked button
        button.classList.add('active');
        
        // Hide all tables
        tables.forEach(table => table.classList.remove('active'));
        
        // Show selected table
        const tabId = button.getAttribute('data-tab');
        if (tabId) {
          const tableToShow = document.getElementById(tabId + '-table');
          if (tableToShow) {
            tableToShow.classList.add('active');
          }
        }
      });
    });
    
    // Add copy functionality to copy buttons
    const copyButtons = document.querySelectorAll('.copy-btn');
    
    copyButtons.forEach(button => {
      button.addEventListener('click', () => {
        const command = button.getAttribute('data-command');
        if (command) {
          navigator.clipboard.writeText(command).then(() => {
            // Visual feedback for copy success
            button.classList.add('copied');
            const iconElement = button.querySelector('.copy-icon');
            if (iconElement) {
              iconElement.textContent = 'âœ“';
              
              // Reset after 2 seconds
              setTimeout(() => {
                button.classList.remove('copied');
                iconElement.textContent = 'ðŸ“‹';
              }, 2000);
            }
          });
        }
      });
    });
  });
</script>
