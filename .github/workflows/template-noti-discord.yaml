name: noti-discord
on:
  workflow_call:
    inputs:
      build_reason:
        required: true
        type: string
        default: 'Nightly'
      new_version:
        required: true
        type: string
        default: ''

jobs:
  noti-discord:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set version to environment variable
        run: |
          echo "VERSION=${{ inputs.new_version }}" >> $GITHUB_ENV
          echo "RUNNER_ID=$GITHUB_RUN_ID" >> $GITHUB_ENV
          echo "BUILD_REASON=${{ inputs.build_reason }}" >> $GITHUB_ENV

      - name: Notify Discord
        uses: appleboy/discord-action@v1.0.0
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          message: |
            Cortex.cpp ${{ env.BUILD_REASON }} build artifact version ${{ env.VERSION }}:
            - Windows:
              - Network Installer: https://delta.jan.ai/cortex/v${{ env.VERSION }}/windows-amd64/cortex-${{ env.VERSION }}-windows-amd64-network-installer.exe
              - Local Installer: https://delta.jan.ai/cortex/v${{ env.VERSION }}/windows-amd64/cortex-${{ env.VERSION }}-windows-amd64-local-installer.exe
              - Binary: https://delta.jan.ai/cortex/v${{ env.VERSION }}/windows-amd64/cortex-nightly.tar.gz
            - macOS Universal:
              - Network Installer: https://delta.jan.ai/cortex/v${{ env.VERSION }}/mac-universal/cortex-${{ env.VERSION }}-mac-universal-network-installer.pkg
              - Local Installer: https://delta.jan.ai/cortex/v${{ env.VERSION }}/mac-universal/cortex-${{ env.VERSION }}-mac-universal-local-installer.pkg
              - Binary: https://delta.jan.ai/cortex/v${{ env.VERSION }}/mac-universal/cortex-nightly.tar.gz
            - Linux Deb:
              - Network Installer: https://delta.jan.ai/cortex/v${{ env.VERSION }}/linux-amd64/cortex-${{ env.VERSION }}-linux-amd64-network-installer.deb
              - Local Installer: https://delta.jan.ai/cortex/v${{ env.VERSION }}/linux-amd64/cortex-${{ env.VERSION }}-linux-amd64-local-installer.deb
              - Binary: https://delta.jan.ai/cortex/v${{ env.VERSION }}/linux-amd64/cortex-nightly.tar.gz
            - Docker: menloltd/cortex:nightly-${{ env.VERSION }}
            - Github action run: https://github.com/menloresearch/cortex.cpp/actions/runs/${{ env.RUNNER_ID }}
